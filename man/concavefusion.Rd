% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SA22204174R.R
\name{concavefusion}
\alias{concavefusion}
\title{A concave pairwise fusion approach for subgroup analysis using R}
\usage{
concavefusion(X, y, times = 1e+06, vartheta, gamma, lambda)
}
\arguments{
\item{X}{independent variables of linear regression model, data structure: (n,p)-dimensional matrix.}

\item{y}{dependent variables of linear regression model, data structure: (n,1)-dimensional matrix, or n-dimensiobal vector.}

\item{times}{the upper bound on the number of iterations, data structure: int.}

\item{vartheta}{parameter of the penalty function, data structure: numeric.}

\item{gamma}{parameter of the penalty function, data structure: numeric.}

\item{lambda}{parameter of the penalty function, data structure: numeric.}
}
\value{
a list including
 iterations: the number of iterations, data structure: int.
 mu: the estimate of mu in linear statistical model, data structure: n-dimensional vector.
 sigma: the estimate of beta in linear statistical model, data structure: (p,1)-dimensional matrix.
}
\description{
A concave pairwise fusion approach to estimate the parameters of a linear statistical model in order to do subgroup analysis using R
}
\examples{
\dontrun{
    #parameters of the samples
    n <- 50; p <- 2; K <- 3
    sigma <- matrix(0.3, nrow = p, ncol = p) + diag(0.7, p)
    mu <- c(-2,0,2)
    beta <- matrix(c(1,3), nrow = p, ncol = 1)
    #generate the samples
    set.seed(1)
    mu.sample <- sample(mu, size = n, replace = TRUE, prob = c(1/3,1/3,1/3))
    X <- mvtnorm::rmvnorm(n, mean = c(0,0), sigma = sigma)
    y <- mu.sample + X\%*\%beta + rnorm(n, mean = 0, sd =0.5)
    #parameters to be input in the function
    vartheta <- 1; gamma <- 3; lambda <- 0.05; times <- 1e4
    #using the function to implement subgroup analysis
    result <- concavefusion(X, y, times, vartheta, gamma, lambda)
    #check whether the results accord with the theoretical value
    result$iterations; 
    result$mu[mu.sample==mu[1]]; result$mu[mu.sample==mu[2]]; result$mu[mu.sample==mu[3]]; 
    result$beta
}
}
